#!/bin/bash
set -e

# Check if LOCAL_DOMAIN environment variable is set
if [ -z "$LOCAL_DOMAIN" ]; then
  echo "Error: LOCAL_DOMAIN environment variable is not set"
  exit 1
fi

# Install local CA if it doesn't exist
if [ ! -f "/root/.local/share/mkcert/rootCA.pem" ]; then
  echo "Creating new local CA..."
  mkcert -install
else
  echo "Local CA already exists."
fi

# Create localCerts directory inside /data
mkdir -p /data/localCerts

# Copy CA to output folder for later use on client devices
cp "$(mkcert -CAROOT)/rootCA.pem" /data/localCerts/

# Information about the certificate we're going to create
echo "Creating certificates for domain: $LOCAL_DOMAIN"
echo "Creating certificates for: *.$LOCAL_DOMAIN"

# Change to certificates directory
cd /data/localCerts

# Create certificates for domains
mkcert -cert-file "$LOCAL_DOMAIN.pem" -key-file "$LOCAL_DOMAIN-key.pem" "*.$LOCAL_DOMAIN" "$LOCAL_DOMAIN"

# Create a combined file for compatibility with different systems
cat "$LOCAL_DOMAIN.pem" "$LOCAL_DOMAIN-key.pem" > "$LOCAL_DOMAIN-fullchain.pem"

# Set file permissions for certificate files
chmod 644 /data/localCerts/*

# Create Traefik dynamic configuration file for TLS
echo "Creating Traefik TLS configuration file..."

# Create traefik-tls.yml directly in the /data directory
cat > /data/local-tls.yml << EOF
# This file was automatically generated by mkcert
# Domain: $LOCAL_DOMAIN

tls:
  certificates:
    - certFile: /localCerts/$LOCAL_DOMAIN.pem
      keyFile: /localCerts/$LOCAL_DOMAIN-key.pem
      stores:
        - default
EOF

echo "TLS configuration file created: /data/local-tls.yml"
echo "Certificate generation completed!"
echo "Files saved to /data/localCerts/ directory:"
ls -la /data/localCerts/

echo "Remember to install rootCA.pem on your client devices!"
echo "Done!"
